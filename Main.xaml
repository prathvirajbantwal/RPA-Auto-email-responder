<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="790.4,972.8" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System.Net.Mail" xmlns:uga="clr-namespace:UiPath.GSuite.Activities;assembly=UiPath.GSuite.Activities" xmlns:ugage="clr-namespace:UiPath.GSuite.Activities.Gmail.Enums;assembly=UiPath.GSuite.Activities" xmlns:ugagm="clr-namespace:UiPath.GSuite.Activities.Gmail.Models;assembly=UiPath.GSuite.Activities" xmlns:ugm="clr-namespace:UiPath.GSuite.Models;assembly=UiPath.GSuite" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:upr="clr-namespace:UiPath.Platform.ResourceHandling;assembly=UiPath.Platform" xmlns:usau="clr-namespace:UiPath.Shared.Activities.Utils;assembly=UiPath.GSuite.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>UiPath.GSuite.Activities.Gmail.Models</x:String>
      <x:String>UiPath.GSuite.Activities.Gmail.Filters</x:String>
      <x:String>UiPath.GSuite.Activities.Filters</x:String>
      <x:String>UiPath.GSuite.Gmail.Enums</x:String>
      <x:String>UiPath.GSuite.Models</x:String>
      <x:String>UiPath.Shared.Api.Google.Gmail.Models</x:String>
      <x:String>UiPath.GSuite.Activities.Gmail.Enums</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.GSuite.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.GSuite</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.Platform.SyncObjects</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.GSuite</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">False</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence sap2010:Annotation.AnnotationText="Email Responder  Built Using UIPath Studio" DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="1012,834" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <StateMachine InitialState="{x:Reference __ReferenceID3}" sap2010:Annotation.AnnotationText="Email Auto-Responder System&#xA;The Email Auto-Responder System automates the process of responding to incoming emails based on predefined keywords and responses. The system connects to a Gmail account, retrieves unread emails, and checks their subject and body for specific keywords. Using a keyword-response mapping stored in an Excel file, the system sends appropriate responses to the email senders. The solution is designed to streamline email handling and ensure timely and consistent replies.&#xA;&#xA;Developed By - Prathviraj B R , Praharsh T , Shreya Kottary " DisplayName="State Machine" sap:VirtualizedContainerService.HintSize="600,780" sap2010:WorkflowViewState.IdRef="StateMachine_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <av:Point x:Key="ShapeLocation">625,5</av:Point>
          <x:Double x:Key="StateContainerWidth">1095</x:Double>
          <x:Double x:Key="StateContainerHeight">536</x:Double>
          <av:PointCollection x:Key="ConnectorLocation">675,30 713.5,30 713.5,102</av:PointCollection>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <State x:Name="__ReferenceID3" sap2010:Annotation.AnnotationText="This state is responsible for initializing all resources and preparing data for processing. This includes loading configurations and reading emails." DisplayName="Initialization State" sap:VirtualizedContainerService.HintSize="158,207" sap2010:WorkflowViewState.IdRef="State_1">
        <State.Entry>
          <Sequence sap:VirtualizedContainerService.HintSize="628,1768" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch sap2010:Annotation.AnnotationText="Handle potential errors during Gmail authentication, email reading, and sending responses, ensuring smooth execution and error logging." DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="594,1708" sap2010:WorkflowViewState.IdRef="TryCatch_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch.Try>
                <Sequence sap:VirtualizedContainerService.HintSize="556,1415" sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="522,1355" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TryCatch.Try>
                      <Sequence sap:VirtualizedContainerService.HintSize="484,1104" sap2010:WorkflowViewState.IdRef="Sequence_6">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <uga:GetEmailListConnections ConnectionAccountName="{x:Null}" ContinueOnError="{x:Null}" CurrentIndex="{x:Null}" Filter="{x:Null}" FolderIdBackup="{x:Reference __ReferenceID0}" ManualEntryFolder="{x:Null}" AllLabels="W3siSWQiOiJDSEFUIiwiTmFtZSI6IkNIQVQiLCJUeXBlIjoic3lzdGVtIn0seyJJZCI6IlNFTlQiLCJOYW1lIjoiU0VOVCIsIlR5cGUiOiJzeXN0ZW0ifSx7IklkIjoiSU5CT1giLCJOYW1lIjoiSU5CT1giLCJUeXBlIjoic3lzdGVtIn0seyJJZCI6IklNUE9SVEFOVCIsIk5hbWUiOiJJTVBPUlRBTlQiLCJUeXBlIjoic3lzdGVtIn0seyJJZCI6IlRSQVNIIiwiTmFtZSI6IlRSQVNIIiwiVHlwZSI6InN5c3RlbSJ9LHsiSWQiOiJEUkFGVCIsIk5hbWUiOiJEUkFGVCIsIlR5cGUiOiJzeXN0ZW0ifSx7IklkIjoiU1BBTSIsIk5hbWUiOiJTUEFNIiwiVHlwZSI6InN5c3RlbSJ9LHsiSWQiOiJDQVRFR09SWV9GT1JVTVMiLCJOYW1lIjoiQ0FURUdPUllfRk9SVU1TIiwiVHlwZSI6InN5c3RlbSJ9LHsiSWQiOiJDQVRFR09SWV9VUERBVEVTIiwiTmFtZSI6IkNBVEVHT1JZX1VQREFURVMiLCJUeXBlIjoic3lzdGVtIn0seyJJZCI6IkNBVEVHT1JZX1BFUlNPTkFMIiwiTmFtZSI6IkNBVEVHT1JZX1BFUlNPTkFMIiwiVHlwZSI6InN5c3RlbSJ9LHsiSWQiOiJDQVRFR09SWV9QUk9NT1RJT05TIiwiTmFtZSI6IkNBVEVHT1JZX1BST01PVElPTlMiLCJUeXBlIjoic3lzdGVtIn0seyJJZCI6IkNBVEVHT1JZX1NPQ0lBTCIsIk5hbWUiOiJDQVRFR09SWV9TT0NJQUwiLCJUeXBlIjoic3lzdGVtIn0seyJJZCI6IlNUQVJSRUQiLCJOYW1lIjoiU1RBUlJFRCIsIlR5cGUiOiJzeXN0ZW0ifSx7IklkIjoiVU5SRUFEIiwiTmFtZSI6IlVOUkVBRCIsIlR5cGUiOiJzeXN0ZW0ifV0=" AuthScopesInvalid="False" BrowserFolder="Inbox" BrowserFolderLabelId="INBOX" ConnectionId="ec624709-674e-420a-8e00-4454284676f0" DisplayName="Get Email List" EmailList="[MailMessages]" FolderInputSelectionMode="Browse" sap:VirtualizedContainerService.HintSize="450,235" sap2010:WorkflowViewState.IdRef="GetEmailListConnections_1" ImportantOnly="False" IncludeSubfolders="False" MarkAsRead="False" MaxResults="2" StarredOnly="False" UnreadOnly="True" UseConnectionService="True" WithAttachmentsOnly="False">
                          <uga:GetEmailListConnections.Folder>
                            <ugagm:FolderArgument ConnectionDescriptor="{x:Null}" ConnectionKey="{x:Null}" ManualEntryFolderName="{x:Null}" BrowserFolderId="INBOX" BrowserFolderName="Inbox" InputMode="Browse">
                              <ugagm:FolderArgument.Backup>
                                <usau:BackupSlot x:TypeArguments="ugage:FolderInputMode" x:Name="__ReferenceID0" StoredValue="Browse">
                                  <usau:BackupSlot.BackupValues>
                                    <scg:Dictionary x:TypeArguments="ugage:FolderInputMode, scg:List(x:Object)" />
                                  </usau:BackupSlot.BackupValues>
                                </usau:BackupSlot>
                              </ugagm:FolderArgument.Backup>
                            </ugagm:FolderArgument>
                          </uga:GetEmailListConnections.Folder>
                        </uga:GetEmailListConnections>
                        <Assign sap:VirtualizedContainerService.HintSize="450,114" sap2010:WorkflowViewState.IdRef="Assign_3">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[emailCounter]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">0</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="450,173" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Succesfully Read the Emails&quot;]" />
                        <ui:ExcelApplicationScope Password="{x:Null}" SensitivityLabel="{x:Null}" sap2010:Annotation.AnnotationText="Open the Excel file containing keywords and responses." DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="450,358" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" SensitivityOperation="None" WorkbookPath="KeywordAndResponses (1).xlsx">
                          <ui:ExcelApplicationScope.Body>
                            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="416,185" sap2010:WorkflowViewState.IdRef="Sequence_7">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ExcelReadRange AddHeaders="True" sap2010:Annotation.AnnotationText="Read the 'Keywords' sheet from the keywords file into DataTable `dtKeywords`." DataTable="[dtKeywords]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="382,125" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" SheetName="Sheet1">
                                  <ui:ExcelReadRange.Range>
                                    <InArgument x:TypeArguments="x:String">
                                      <Literal x:TypeArguments="x:String" Value="" />
                                    </InArgument>
                                  </ui:ExcelReadRange.Range>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:ExcelReadRange>
                              </Sequence>
                            </ActivityAction>
                          </ui:ExcelApplicationScope.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ExcelApplicationScope>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="450,164" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Reading Of Excel FIles Successful&quot;]" />
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="488,22" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Error" Message="[&quot;Connection Failed WIth Gmail&quot;]" />
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </Sequence>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="560,22" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <Sequence sap:VirtualizedContainerService.HintSize="468,338" sap2010:WorkflowViewState.IdRef="Sequence_28">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_15">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[Exceptions]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[exception.Message]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,164" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Error" Message="[&quot;Failed In Reading Config Files&quot;]" />
                    </Sequence>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
          </Sequence>
        </State.Entry>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">595,102</av:Point>
            <av:Size x:Key="ShapeSize">158,207</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">138.4</x:Double>
            <x:Double x:Key="StateContainerHeight">29</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <State.Transitions>
          <Transition DisplayName="T3" sap:VirtualizedContainerService.HintSize="448.8,522.4" sap2010:WorkflowViewState.IdRef="Transition_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <av:PointCollection x:Key="ConnectorLocation">753,226.20000000000002 1027.5,226.20000000000002 1027.5,280</av:PointCollection>
                <x:Int32 x:Key="SrcConnectionPointIndex">44</x:Int32>
                <x:Int32 x:Key="DestConnectionPointIndex">42</x:Int32>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Transition.To>
              <State x:Name="__ReferenceID1" sap2010:Annotation.AnnotationText="This state is responsible for gracefully ending the process or handling any exceptions that occurred during processing." DisplayName="End State" sap:VirtualizedContainerService.HintSize="150,192" sap2010:WorkflowViewState.IdRef="State_2" IsFinal="True">
                <State.Entry>
                  <TryCatch DisplayName="Try to close all aplications" sap:VirtualizedContainerService.HintSize="452.8,608" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TryCatch.Try>
                      <Sequence sap:VirtualizedContainerService.HintSize="416,376.8" sap2010:WorkflowViewState.IdRef="Sequence_18">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="353.6,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Info" Message="[&quot;Email processing completed successfully.&quot;]" />
                        <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="353.6,113.6" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_1" Reason="All emails processed successfully. Ending workflow." />
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="419.2,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Failed to close applications, so kill processes" sap:VirtualizedContainerService.HintSize="416,254.4" sap2010:WorkflowViewState.IdRef="Sequence_17">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Log message (Failed to close applications)" sap:VirtualizedContainerService.HintSize="353.6,165.6" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Warn" Message="[&quot;Applications failed to close gracefully. &quot;+Exception.Message+&quot; at Source: &quot;+Exception.Source]" />
                          </Sequence>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </State.Entry>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">945,280</av:Point>
                    <av:Size x:Key="ShapeSize">150,192</av:Size>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Double x:Key="StateContainerWidth">138</x:Double>
                    <x:Double x:Key="StateContainerHeight">29</x:Double>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </State>
            </Transition.To>
            <Transition.Action>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_20" Level="Error" Message="[&quot;Error During Initialization Phase&quot;]" />
            </Transition.Action>
            <Transition.Condition>
              <VisualBasicValue x:TypeArguments="x:Boolean" DisplayName="Visual basic value" ExpressionText="Exceptions IsNot Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
            </Transition.Condition>
          </Transition>
          <Transition DisplayName="T2" sap:VirtualizedContainerService.HintSize="448.8,522.4" sap2010:WorkflowViewState.IdRef="Transition_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <av:PointCollection x:Key="ConnectorLocation">595,236.55 351.85,236.55 351.85,272</av:PointCollection>
                <x:Int32 x:Key="SrcConnectionPointIndex">49</x:Int32>
                <x:Int32 x:Key="DestConnectionPointIndex">34</x:Int32>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Transition.To>
              <State x:Name="__ReferenceID2" sap2010:Annotation.AnnotationText="This state handles the core processing logic. It checks each email, matches keywords, and sends replies based on the keyword matches.&#xA;&#xA;" DisplayName="Email Processing State" sap:VirtualizedContainerService.HintSize="153,207" sap2010:WorkflowViewState.IdRef="State_4">
                <State.Entry>
                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="773,1991" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TryCatch.Try>
                      <Sequence sap:VirtualizedContainerService.HintSize="735,1763" sap2010:WorkflowViewState.IdRef="Sequence_29">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ForEach x:TypeArguments="ugm:GmailMessage" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="To loop through the List&lt;MailMessage&gt; and process each email's properties like subject, sender, or body." DisplayName="For Each email" sap:VirtualizedContainerService.HintSize="701,1539" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[MailMessages]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="ugm:GmailMessage">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ugm:GmailMessage" Name="email" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="667,1362" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If sap2010:Annotation.AnnotationText="To check conditions on each email, such as filtering by subject, sender, or content in the body." Condition="[email.Subject.ToLower().Contains(&quot;help desk&quot;)]" DisplayName="Checking Mail Subject Body" sap:VirtualizedContainerService.HintSize="633,1302" sap2010:WorkflowViewState.IdRef="If_2">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="599,886" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="ui:WorkbookApplication" Name="KeywordsList" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap2010:Annotation.AnnotationText="To store or modify values based on the email's content." sap:VirtualizedContainerService.HintSize="565,145" sap2010:WorkflowViewState.IdRef="Assign_11">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[emailBody]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[email.Body]</InArgument>
                                        </Assign.Value>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </Assign>
                                      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="To iterate through each row of the DataTable and access row data." DataTable="[dtKeywords]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="565,681" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                                        <ui:ForEachRow.Body>
                                          <ActivityAction x:TypeArguments="sd:DataRow">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="531,463" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="x:String" Name="recipientEmail" />
                                              </Sequence.Variables>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap2010:Annotation.AnnotationText="Assign the email sender's address to senderAddress." sap:VirtualizedContainerService.HintSize="497,145" sap2010:WorkflowViewState.IdRef="Assign_14">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[recipientEmail]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[email.FromAddress.ToString()]</InArgument>
                                                </Assign.Value>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Assign>
                                              <Switch x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Handle different cases based on keywordValue." DisplayName="Switch" Expression="[email.Body.ToString().ToLower().Trim]" sap:VirtualizedContainerService.HintSize="497,258" sap2010:WorkflowViewState.IdRef="Switch`1_2">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Sequence x:Key="the heating system not working" sap:VirtualizedContainerService.HintSize="416,453" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <uga:SendEmailConnections ArgumentAttachmentPaths="{x:Null}" ArgumentAttachments="{x:Null}" AttachmentPaths="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" ConnectionAccountName="{x:Null}" ContinueOnError="{x:Null}" ReplyTo="{x:Null}" SingleAttachment="{x:Null}" TextBody="{x:Null}" sap2010:Annotation.AnnotationText="Sends different emails based on the value of variable." AttachmentInputMode="UseExisting" AuthScopesInvalid="False" Body="[string.Format(&quot;&lt;P&gt;&lt;SPAN&gt;Please call the electrician&lt;/SPAN&gt;&lt;/P&gt;&quot;)]" ConnectionId="ec624709-674e-420a-8e00-4454284676f0" sap:VirtualizedContainerService.HintSize="382,570" sap2010:WorkflowViewState.IdRef="SendEmailConnections_5" Importance="Normal" InputType="HTML" SaveAsDraft="False" Subject="[&quot;Re: &quot; + email.Subject]" To="[{recipientEmail}]" UseConnectionService="True">
                                                    <uga:SendEmailConnections.Attachments>
                                                      <InArgument x:TypeArguments="scg:IEnumerable(upr:IResource)" />
                                                    </uga:SendEmailConnections.Attachments>
                                                    <uga:SendEmailConnections.AttachmentsBackup>
                                                      <usau:BackupSlot x:TypeArguments="ugage:AttachmentInputMode" StoredValue="UseExisting">
                                                        <usau:BackupSlot.BackupValues>
                                                          <scg:Dictionary x:TypeArguments="ugage:AttachmentInputMode, scg:List(x:Object)" />
                                                        </usau:BackupSlot.BackupValues>
                                                      </usau:BackupSlot>
                                                    </uga:SendEmailConnections.AttachmentsBackup>
                                                    <uga:SendEmailConnections.InputTypeBackup>
                                                      <usau:BackupSlot x:TypeArguments="ugage:BodyInputType" StoredValue="HTML">
                                                        <usau:BackupSlot.BackupValues>
                                                          <scg:Dictionary x:TypeArguments="ugage:BodyInputType, scg:List(x:Object)" />
                                                        </usau:BackupSlot.BackupValues>
                                                      </usau:BackupSlot>
                                                    </uga:SendEmailConnections.InputTypeBackup>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </uga:SendEmailConnections>
                                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="382,173" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="Info" Message="[&quot;Message 1 Has been Sent Successfully&quot;]" />
                                                  <ui:Break sap2010:Annotation.AnnotationText="To exit the switch statement after executing a specific case." sap:VirtualizedContainerService.HintSize="382,90" sap2010:WorkflowViewState.IdRef="Break_1">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:Break>
                                                </Sequence>
                                                <Sequence x:Key="water overflowing" sap:VirtualizedContainerService.HintSize="416,409" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <uga:SendEmailConnections ArgumentAttachmentPaths="{x:Null}" ArgumentAttachments="{x:Null}" AttachmentPaths="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" ConnectionAccountName="{x:Null}" ContinueOnError="{x:Null}" ReplyTo="{x:Null}" SingleAttachment="{x:Null}" TextBody="{x:Null}" AttachmentInputMode="UseExisting" AuthScopesInvalid="False" Body="[string.Format(&quot;&lt;P&gt;&lt;SPAN&gt;Contact Plumber&lt;/SPAN&gt;&lt;/P&gt;&quot;)]" ConnectionId="ec624709-674e-420a-8e00-4454284676f0" sap:VirtualizedContainerService.HintSize="382,539" sap2010:WorkflowViewState.IdRef="SendEmailConnections_7" Importance="Normal" InputType="HTML" SaveAsDraft="False" Subject="[&quot;Re: &quot; + email.Subject]" To="[{recipientEmail}]" UseConnectionService="True">
                                                    <uga:SendEmailConnections.Attachments>
                                                      <InArgument x:TypeArguments="scg:IEnumerable(upr:IResource)" />
                                                    </uga:SendEmailConnections.Attachments>
                                                    <uga:SendEmailConnections.AttachmentsBackup>
                                                      <usau:BackupSlot x:TypeArguments="ugage:AttachmentInputMode" StoredValue="UseExisting">
                                                        <usau:BackupSlot.BackupValues>
                                                          <scg:Dictionary x:TypeArguments="ugage:AttachmentInputMode, scg:List(x:Object)" />
                                                        </usau:BackupSlot.BackupValues>
                                                      </usau:BackupSlot>
                                                    </uga:SendEmailConnections.AttachmentsBackup>
                                                    <uga:SendEmailConnections.InputTypeBackup>
                                                      <usau:BackupSlot x:TypeArguments="ugage:BodyInputType" StoredValue="HTML">
                                                        <usau:BackupSlot.BackupValues>
                                                          <scg:Dictionary x:TypeArguments="ugage:BodyInputType, scg:List(x:Object)" />
                                                        </usau:BackupSlot.BackupValues>
                                                      </usau:BackupSlot>
                                                    </uga:SendEmailConnections.InputTypeBackup>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </uga:SendEmailConnections>
                                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="382,173" sap2010:WorkflowViewState.IdRef="LogMessage_25" Level="Info" Message="[&quot;Message 2 Has been Sent Successfully&quot;]" />
                                                  <ui:Break sap:VirtualizedContainerService.HintSize="382,48" sap2010:WorkflowViewState.IdRef="Break_2" />
                                                </Sequence>
                                                <Sequence x:Key="book a conference room" sap:VirtualizedContainerService.HintSize="416,409" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <uga:SendEmailConnections ArgumentAttachmentPaths="{x:Null}" ArgumentAttachments="{x:Null}" AttachmentPaths="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" ConnectionAccountName="{x:Null}" ContinueOnError="{x:Null}" ReplyTo="{x:Null}" SingleAttachment="{x:Null}" TextBody="{x:Null}" AttachmentInputMode="UseExisting" AuthScopesInvalid="False" Body="[string.Format(&quot;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Fill the form and mention your email, your name, date and time&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&quot;)]" ConnectionId="ec624709-674e-420a-8e00-4454284676f0" sap:VirtualizedContainerService.HintSize="382,539" sap2010:WorkflowViewState.IdRef="SendEmailConnections_6" Importance="Normal" InputType="HTML" SaveAsDraft="False" Subject="[&quot;Re: &quot; + email.Subject]" To="[{recipientEmail}]" UseConnectionService="True">
                                                    <uga:SendEmailConnections.Attachments>
                                                      <InArgument x:TypeArguments="scg:IEnumerable(upr:IResource)" />
                                                    </uga:SendEmailConnections.Attachments>
                                                    <uga:SendEmailConnections.AttachmentsBackup>
                                                      <usau:BackupSlot x:TypeArguments="ugage:AttachmentInputMode" StoredValue="UseExisting">
                                                        <usau:BackupSlot.BackupValues>
                                                          <scg:Dictionary x:TypeArguments="ugage:AttachmentInputMode, scg:List(x:Object)" />
                                                        </usau:BackupSlot.BackupValues>
                                                      </usau:BackupSlot>
                                                    </uga:SendEmailConnections.AttachmentsBackup>
                                                    <uga:SendEmailConnections.InputTypeBackup>
                                                      <usau:BackupSlot x:TypeArguments="ugage:BodyInputType" StoredValue="HTML">
                                                        <usau:BackupSlot.BackupValues>
                                                          <scg:Dictionary x:TypeArguments="ugage:BodyInputType, scg:List(x:Object)" />
                                                        </usau:BackupSlot.BackupValues>
                                                      </usau:BackupSlot>
                                                    </uga:SendEmailConnections.InputTypeBackup>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </uga:SendEmailConnections>
                                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="382,173" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="Info" Message="[&quot;Message 3 Has been Sent Successfully&quot;]" />
                                                  <ui:Break sap:VirtualizedContainerService.HintSize="382,48" sap2010:WorkflowViewState.IdRef="Break_3" />
                                                </Sequence>
                                                <Sequence x:Key="room cleaning" sap:VirtualizedContainerService.HintSize="416,409" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <uga:SendEmailConnections ArgumentAttachmentPaths="{x:Null}" ArgumentAttachments="{x:Null}" AttachmentPaths="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" ConnectionAccountName="{x:Null}" ContinueOnError="{x:Null}" ReplyTo="{x:Null}" SingleAttachment="{x:Null}" TextBody="{x:Null}" AttachmentInputMode="UseExisting" AuthScopesInvalid="False" Body="[string.Format(&quot;&lt;P&gt;&lt;SPAN&gt;Please contact house keeping team&lt;/SPAN&gt;&lt;/P&gt;&quot;)]" ConnectionId="ec624709-674e-420a-8e00-4454284676f0" sap:VirtualizedContainerService.HintSize="382,539" sap2010:WorkflowViewState.IdRef="SendEmailConnections_8" Importance="Normal" InputType="HTML" SaveAsDraft="False" Subject="[&quot;Re: &quot; + email.Subject]" To="[{recipientEmail}]" UseConnectionService="True">
                                                    <uga:SendEmailConnections.Attachments>
                                                      <InArgument x:TypeArguments="scg:IEnumerable(upr:IResource)" />
                                                    </uga:SendEmailConnections.Attachments>
                                                    <uga:SendEmailConnections.AttachmentsBackup>
                                                      <usau:BackupSlot x:TypeArguments="ugage:AttachmentInputMode" StoredValue="UseExisting">
                                                        <usau:BackupSlot.BackupValues>
                                                          <scg:Dictionary x:TypeArguments="ugage:AttachmentInputMode, scg:List(x:Object)" />
                                                        </usau:BackupSlot.BackupValues>
                                                      </usau:BackupSlot>
                                                    </uga:SendEmailConnections.AttachmentsBackup>
                                                    <uga:SendEmailConnections.InputTypeBackup>
                                                      <usau:BackupSlot x:TypeArguments="ugage:BodyInputType" StoredValue="HTML">
                                                        <usau:BackupSlot.BackupValues>
                                                          <scg:Dictionary x:TypeArguments="ugage:BodyInputType, scg:List(x:Object)" />
                                                        </usau:BackupSlot.BackupValues>
                                                      </usau:BackupSlot>
                                                    </uga:SendEmailConnections.InputTypeBackup>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </uga:SendEmailConnections>
                                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="382,173" sap2010:WorkflowViewState.IdRef="LogMessage_24" Level="Info" Message="[&quot;Message 4 Has been Sent Successfully&quot;]" />
                                                  <ui:Break sap:VirtualizedContainerService.HintSize="382,48" sap2010:WorkflowViewState.IdRef="Break_4" />
                                                </Sequence>
                                              </Switch>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ForEachRow.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ForEachRow>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,224" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="382,164" sap2010:WorkflowViewState.IdRef="LogMessage_21" Level="Info" Message="[&quot;Keyword Help Desk not Found&quot;]" />
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEach.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ForEach>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="701,164" sap2010:WorkflowViewState.IdRef="LogMessage_27" Level="Info" Message="[&quot;Exiting Process State&quot;]" />
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="739,22" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="Info" Message="[&quot;Exception Occured During Processing State&quot;]" />
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </State.Entry>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">283,272</av:Point>
                    <av:Size x:Key="ShapeSize">153,207</av:Size>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Double x:Key="StateContainerWidth">138</x:Double>
                    <x:Double x:Key="StateContainerHeight">29</x:Double>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <State.Exit>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_29" Level="Info" Message="[&quot;Process Exit&quot;]" />
                </State.Exit>
                <State.Transitions>
                  <Transition DisplayName="T1" sap:VirtualizedContainerService.HintSize="448.8,522.4" sap2010:WorkflowViewState.IdRef="Transition_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:PointCollection x:Key="ConnectorLocation">351.85,479 351.85,509 1020,509 1020,472</av:PointCollection>
                        <x:Int32 x:Key="SrcConnectionPointIndex">35</x:Int32>
                        <x:Int32 x:Key="DestConnectionPointIndex">39</x:Int32>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Transition.To>
                      <x:Reference>__ReferenceID1</x:Reference>
                    </Transition.To>
                    <Transition.Action>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_31" Level="Info" Message="[&quot;Process State Execution Done&quot;]" />
                    </Transition.Action>
                    <Transition.Condition>
                      <Literal x:TypeArguments="x:Boolean" DisplayName="Literal" sap2010:WorkflowViewState.IdRef="Literal`1_2" Value="True" />
                    </Transition.Condition>
                  </Transition>
                </State.Transitions>
              </State>
            </Transition.To>
            <Transition.Action>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_30" Level="Info" Message="[&quot;Email Verifying Done&quot;]" />
            </Transition.Action>
            <Transition.Condition>
              <Literal x:TypeArguments="x:Boolean" DisplayName="Literal" sap2010:WorkflowViewState.IdRef="Literal`1_1" Value="True" />
            </Transition.Condition>
          </Transition>
        </State.Transitions>
      </State>
      <x:Reference>__ReferenceID1</x:Reference>
      <x:Reference>__ReferenceID2</x:Reference>
      <StateMachine.Variables>
        <Variable x:TypeArguments="x:String" Name="emailBody" />
        <Variable x:TypeArguments="x:Int32" Name="emailCounter" />
        <Variable x:TypeArguments="snm:MailMessage" Name="TransactionItem" />
        <Variable x:TypeArguments="scg:List(ugm:GmailMessage)" Name="MailMessages" />
        <Variable x:TypeArguments="scg:List(ugm:GmailMessage)" Name="emailList" />
        <Variable x:TypeArguments="x:String" Name="responseText" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtKeywords" />
        <Variable x:TypeArguments="x:String" Name="receipentEmail" />
        <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Config" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtConfig" />
        <Variable x:TypeArguments="x:String" Name="Exceptions" />
      </StateMachine.Variables>
    </StateMachine>
  </Sequence>
</Activity>